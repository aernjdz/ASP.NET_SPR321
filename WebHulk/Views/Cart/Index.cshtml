@model List<ProductItemViewModel>

@using System.Diagnostics;

@{
    Stopwatch stopwatch = new Stopwatch();
    stopwatch.Start();
    var totalCount = Model?.Count ?? 0; // Total count of products
    var totalSum = Model?.Sum(p => p.Price) ?? 0; // Total sum of product prices
}

<div class="pagetitle castom-margin">
    <div class="d-flex justify-content-center">
        <h1>Cart List</h1>
    </div>
</div>

<section class="section">
    <div class="row">
        <div class="col-lg-12">
            <div class="card">
                <div class="card-body">

                    <table class="table datatable mt-3">
                        <thead>
                            <tr>
                                <th>#</th>
                                <th>Name</th>
                                <th>Price</th>
                                <th>Image</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var p in Model)
                            {
                                <tr>
                                    <td>@p.Id</td>
                                    <td>@p.Name</td>
                                    <td>@p.Price $</td>
                                    <td>
                                        <img src="@Url.Content(p.Images?.FirstOrDefault())" alt="@p.Name" style="max-width: 80px;" />
                                    </td>
                                    <td>
                                        <a asp-action="Delete" asp-route-id="@p.Id" class="btn btn-outline-danger btn-sm" data-bs-toggle="modal" data-bs-target="#deleteModal-@p.Id">
                                            <i class="bi bi-trash"></i>
                                        </a>
                                    </td>
                                </tr>

                                <div class="modal fade" id="deleteModal-@p.Id" tabindex="-1" aria-hidden="true">
                                    <div class="modal-dialog">
                                        <div class="modal-content">
                                            <div class="modal-header">
                                                <h5 class="modal-title" id="deleteModalLabel-@p.Id">Remove a product</h5>
                                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                            </div>
                                            <div class="modal-body">
                                                <p>Are you sure you want to delete "@p.Name"?</p>
                                                <form method="post" asp-action="Remove" asp-route-productId="@p.Id" asp-route-returnUrl="@Context.Request.Path">
                                                    <input type="hidden" name="id" value="@p.Id" />
                                                    <button type="submit" class="btn btn-danger">Remove</button>
                                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                                                </form>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </tbody>
                    </table>
                    <!-- End Table with stripped rows -->

                    <div class="total-summary">
                        <h5>Total Count: @totalCount</h5>
                        <h5>Total Sum: @totalSum $</h5>
                    </div>

                </div>
            </div>

        </div>
    </div>
</section>

@{
    stopwatch.Stop();
    // Get the elapsed time as a TimeSpan value.
    TimeSpan ts = stopwatch.Elapsed;

    // Format and display the TimeSpan value.
    string elapsedTime = String.Format("{0:00}:{1:00}:{2:00}.{3:00}",
        ts.Hours, ts.Minutes, ts.Seconds,
        ts.Milliseconds / 10);
    Console.WriteLine("RunTime ProductsController Index" + elapsedTime);
}

<style>
    .castom-margin {
        margin-top: 20px;
    }

    .total-summary {
        margin-top: 20px;
        font-weight: bold;
    }
</style>
